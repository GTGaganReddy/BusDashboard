openapi: 3.0.0
info:
  title: Simple Driver Route Optimization API
  description: Simple workflow - pull hours, optimize routes, apply assignments
  version: 3.0.0
servers:
  - url: https://2a61b9ff-1974-4555-a987-59f727006e14-00-qtu4qo056asw.spock.replit.dev/api
paths:
  /drivers:
    get:
      summary: Get all drivers with remaining hours
      description: Returns all drivers with their monthly hours remaining
      operationId: getAllDrivers
      responses:
        '200':
          description: List of drivers with current hours
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    code:
                      type: string
                    monthlyHoursTotal:
                      type: string
                    monthlyHoursRemaining:
                      type: string
                    status:
                      type: string
                      enum: [active, critical, low]

  /drivers/{name}:
    get:
      summary: Get specific driver hours by name
      description: Returns specific driver with their remaining hours
      operationId: getDriverByName
      parameters:
        - name: name
          in: path
          required: true
          description: Driver name (e.g., "Lisa Chen", "Mike Rodriguez")
          schema:
            type: string
      responses:
        '200':
          description: Driver information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  code:
                    type: string
                  monthlyHoursTotal:
                    type: string
                  monthlyHoursRemaining:
                    type: string
                  status:
                    type: string
                    enum: [active, critical, low]

  /routes:
    get:
      summary: Get all routes needing assignment
      description: Returns all routes with their hour requirements
      operationId: getAllRoutes
      responses:
        '200':
          description: List of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    routeNumber:
                      type: string
                    description:
                      type: string
                    hoursRequired:
                      type: string

  /ortools/optimize:
    post:
      summary: Optimize route assignments
      description: Takes drivers and routes, returns optimal assignments
      operationId: optimizeRoutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                drivers:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Driver name
                      available_hours:
                        type: number
                        description: Hours available for assignment
                    required: [name, available_hours]
                routes:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Route name (e.g., "RT-001 - Downtown Circuit")
                      hours:
                        type: number
                        description: Hours required for route
                    required: [name, hours]
              required: [drivers, routes]
      responses:
        '200':
          description: Optimization results
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [optimal, infeasible, error]
                  assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        driver_name:
                          type: string
                        route_name:
                          type: string
                        route_hours:
                          type: number
                  driver_status:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        assigned_route:
                          type: string
                          nullable: true
                        assigned_hours:
                          type: number
                        remaining_hours:
                          type: number
                  statistics:
                    type: object
                    properties:
                      total_routes:
                        type: integer
                      routes_assigned:
                        type: integer
                      routes_unassigned:
                        type: integer
                      drivers_working:
                        type: integer
                      drivers_available:
                        type: integer

  /ortools/apply:
    post:
      summary: Apply assignments to database
      description: Saves assignments and updates driver hours automatically
      operationId: applyAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assignments:
                  type: array
                  items:
                    type: object
                    properties:
                      driver_name:
                        type: string
                      route_name:
                        type: string
                      route_hours:
                        type: number
                    required: [driver_name, route_name, route_hours]
                assignedDate:
                  type: string
                  format: date
                  description: Date for assignments (YYYY-MM-DD)
              required: [assignments, assignedDate]
      responses:
        '200':
          description: Assignments applied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Assignments applied successfully"
                  assignmentsCreated:
                    type: integer
                    example: 5

  /dashboard/stats:
    get:
      summary: Get dashboard statistics
      description: Returns current system statistics
      operationId: getDashboardStats
      responses:
        '200':
          description: Dashboard statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRoutes:
                    type: integer
                  activeDrivers:
                    type: integer
                  totalHours:
                    type: number
                  criticalDrivers:
                    type: integer

# Simple GPT Assistant Workflow
x-gpt-integration:
  simple_workflow: |
    Your GPT assistant follows this simple 3-step workflow:
    
    STEP 1: PULL HOURS
    - GET /drivers (get all drivers with remaining hours)
    - GET /routes (get routes needing assignment)
    - Pick drivers with available hours
    
    STEP 2: OPTIMIZE
    - POST /ortools/optimize with selected drivers and routes
    - Review the assignments returned
    - Make changes if needed and optimize again
    
    STEP 3: APPLY
    - POST /ortools/apply with the final assignments
    - Dashboard automatically updates
    - Driver hours automatically updated

  input_format:
    drivers_example: |
      [
        {
          "name": "Lisa Chen",
          "available_hours": 50.5
        },
        {
          "name": "Mike Rodriguez", 
          "available_hours": 89.3
        }
      ]
    
    routes_example: |
      [
        {
          "name": "RT-001 - Downtown Circuit",
          "hours": 8.5
        },
        {
          "name": "RT-002 - Suburban Express",
          "hours": 10.0
        }
      ]

  output_format:
    assignments_example: |
      [
        {
          "driver_name": "Lisa Chen",
          "route_name": "RT-001 - Downtown Circuit",
          "route_hours": 8.5
        },
        {
          "driver_name": "Mike Rodriguez",
          "route_name": "RT-002 - Suburban Express", 
          "route_hours": 10.0
        }
      ]

  key_features:
    - "Pull driver hours first"
    - "Optimize with custom driver/route selection"
    - "Apply assignments to update dashboard"
    - "Automatic hour tracking"
    - "Make multiple optimization attempts"

  example_conversation:
    user: "Optimize routes for today"
    assistant_step1: "Let me check available drivers... Found 24 drivers with Lisa Chen (3.1h), Mike Rodriguez (89.3h)..."
    assistant_step2: "Running optimization... Found optimal assignments for 5 routes..."
    assistant_step3: "Applied assignments! Dashboard updated, driver hours reduced automatically."